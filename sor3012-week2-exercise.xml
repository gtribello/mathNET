<PAGE>
  <TITLE> Computer programming for statistics I </TITLE>
  <HEADER>
     <script src="assets/scripts/plottingTools.js" type="text/javascript"> </script>
  </HEADER>
  <WELCOME>
     In the previous exercise you learnt how to generate a sample of Bernoulli random variables.  In this exercise we are going to build on these ideas by learning how to generate Binomial and Geometric random varibles and by learning how to calculate summary statistics from a sample.
  </WELCOME>
  <WORKSPACE>
    <table>
      <tr>
        <td>
          <div id="graph" style="width: 400px"></div>
        </td>
        <td width="10px"> nbsp;nbsp; </td>
        <td rowspan="2">
          <div id="blocklyDiv" style="height: 400px"> </div>
        </td> 
      </tr>
    </table>
  </WORKSPACE>
  <APIFUNCTIONS>
    // Add graph functions to API
    addGraphFunctionsToApi( interpreter, scope );
  </APIFUNCTIONS>
  <BLOCKS>
  </BLOCKS>
  <SCRIPTS>
    myplot.data = [];

    // Load the Google Chart Tools Visualization API and the chart package.
    if (typeof google == 'object') {
      google.load('visualization', '1', {packages: ['corechart']});
    } else {
      alert('Unable to load Google\'s chart API.\n' +
            'Are you connected to the Internet?');
    } 
  </SCRIPTS>
  <STARTUP>
    myplot.data.length = 0;
    myplot.data.unshift(['x', 'y'], [0, 0]);
    myplot.plotGraph('graph','scatter');
  </STARTUP>
  <LEVEL>
    <DESCRIPTION>
       Use the blocks below to create 10 Bernoulli random variables, $\{X_i\}$. Store all these random variables in a list use this list to plot a graph with points at $(i, X_i)$ where $i$ runs from 1 to 10.
    </DESCRIPTION>
    <HINT>
       This question is the same as the final question of the last exercise.  If you are struggling look at your notes for that exercise. 
    </HINT>
    <TOOLBOX>
      <category name="Variables" custom="VARIABLE"></category>
      <category name="Program">
         <block type="controls_repeat_ext"></block>
         <block type="math_arithmetic"></block>
         <block type="math_number"></block>
      </category>
      <category name="Logic">
        <block type="controls_if"></block>
        <block type="logic_compare"></block>
      </category>
      <category name="Random">
         <block type="uniform_random"></block>
      </category>
      <category name="Plotting">
         <block type="draw_list"></block>
      </category>
      <category name="Lists">
         <block type="lists_repeat"></block>
         <block type="lists_getIndex"></block>
         <block type="lists_setIndex"></block>
      </category>
    </TOOLBOX>
    <FINISH>
      prand = 0;
      for(var i=0; i &lt; ww.length; i++ ){
           if( ww[i]=="uniform random variable between 0 and 1" ){ prand += 1; }
      }
      levelcomplete=true;
      if( prand != 1 || myplot.data.length &lt; 12 ){ levelcomplete=false; }
      for(var i=2; i &lt; myplot.data.length; i++ ){
           if( myplot.data[i][1]!=0 &amp;&amp; myplot.data[i][1]!=1 ){ levelcomplete=false; }
           if( myplot.data[i][0]!=(i-1) ){ levelcomplete=false; } 
      }
    </FINISH>
    <VIDEO> https://www.youtube.com/embed/RNQFAH2wCos </VIDEO>
  </LEVEL>
  <LEVEL>
    <DESCRIPTION>
      Use the blocks below to modify the code that you have written so that it generates a single binomial random variable, $X$, with parameters $p=0.5$ and $N=5$.  Plot the value of this binomial random variable at the point $(1,X)$.
    </DESCRIPTION>
    <VID> https://www.youtube.com/watch?v=RNQFAH2wCos </VID>
    <HINT>
      When generating each binomial random variable we need to do repeated bernoulli trials.
    </HINT>
    <TOOLBOX>
      <category name="Variables" custom="VARIABLE"></category>
      <category name="Program">
         <block type="controls_repeat_ext"></block>
         <block type="math_arithmetic"></block>
         <block type="math_number"></block>
      </category>
      <category name="Logic">
        <block type="controls_if"></block>
        <block type="logic_compare"></block>
      </category>
      <category name="Random">
         <block type="uniform_random"></block>
      </category>
      <category name="Plotting">
         <block type="draw_point"></block>
      </category>
    </TOOLBOX>
    <FINISH>
      prand = 0;
      for(var i=0; i &lt; ww.length; i++ ){
           if( ww[i]=="uniform random variable between 0 and 1" ){ prand += 1; }
      }    
      levelcomplete=true;
      if( prand != 1 &amp;&amp; myplot.data.length &lt; 3 ){ levelcomplete=false; }
      if( myplot.data[2][1]!=0 &amp;&amp; myplot.data[2][1]!=1 &amp;&amp; myplot.data[2][1]!=2 &amp;&amp; myplot.data[2][1]!=3 &amp;&amp; myplot.data[2][1]!=4 &amp;&amp; myplot.data[2][1]!=5 ){ levelcomplete=false; } 
    </FINISH>
    <VIDEO> https://www.youtube.com/embed/fna3ysWxP0E </VIDEO>
  </LEVEL> 
  <LEVEL>
    <DESCRIPTION>
      Now use the blocks below to write a code that generates a single geometric random variable, $Y$, with parameter $p=0.6$.  Plot the value fo this geometric random variable at the point $(1,Y)$
    </DESCRIPTION>
    <VID> https://www.youtube.com/watch?v=fna3ysWxP0E </VID>
    <HINT>
       Notice that you have a new block under the program category that will allow you to repeat a set of instructions until a condition is satisfied.
    </HINT>
    <TOOLBOX>
      <category name="Variables" custom="VARIABLE"></category>
      <category name="Program">
         <block type="controls_whileUntil"></block>
         <block type="controls_repeat_ext"></block>
         <block type="math_arithmetic"></block>
         <block type="math_number"></block>
      </category>
      <category name="Logic">
        <block type="controls_if"></block>
        <block type="logic_compare"></block>
      </category>
      <category name="Random">
         <block type="uniform_random"></block>
      </category>
      <category name="Plotting">
         <block type="draw_point"></block>
      </category>
    </TOOLBOX>
    <FINISH>
      prand = 0;
      for(var i=0; i &lt; ww.length; i++ ){
           if( ww[i]=="uniform random variable between 0 and 1" ){ prand += 1; }
      }
      levelcomplete=true;
      if( prand != 1 || myplot.data.length &lt; 3 ){ levelcomplete=false; }
      if( myplot.data[2][1]==0 || myplot.data[2][1]-Math.floor(myplot.data[2][1])!=0  ){ levelcomplete=false; }
      if( myplot.data[2][0]!=1 ){ levelcomplete=false; }
    </FINISH>
    <VIDEO> https://www.youtube.com/embed/UbVJU08Vb5o </VIDEO>
  </LEVEL> 
  <LEVEL>
    <DESCRIPTION>
       Use the blocks to generate a sample of 50 uniform random variables.  Draw a graph showing how the value of the sample mean changes as you increase the number of random variables in your sample.
    </DESCRIPTION>
    <VID> https://www.youtube.com/watch?v=UbVJU08Vb5o </VID>
    <HINT>
       Remember the sample mean, $\mu$, for a sample of $N$ random variables, $\{X_i\}$, is just $\mu = \frac{1}{N} \sum_{i=1}^N X_i$.
    </HINT>
    <TOOLBOX>
      <category name="Variables" custom="VARIABLE"></category>
      <category name="Program">
         <block type="controls_repeat_ext"></block>
         <block type="math_arithmetic"></block>
         <block type="math_number"></block>
      </category>
      <category name="Random">
         <block type="uniform_random"></block>
      </category>
      <category name="Plotting">
         <block type="draw_list"></block>
      </category>
      <category name="Lists">
         <block type="lists_repeat"></block>
         <block type="lists_getIndex"></block>
         <block type="lists_setIndex"></block>
      </category>
    </TOOLBOX>
    <FINISH>
      prand = 0;
      for(var i=0; i &lt; ww.length; i++ ){
           if( ww[i]=="uniform random variable between 0 and 1" ){ prand += 1; }
      }
      levelcomplete=true;
      if( prand != 1 || myplot.data.length &lt; 3 ){ levelcomplete=false; }
      for(var i=2; i &lt; myplot.data.length; i++ ){
           if( myplot.data[i][1] &lt; 0 || myplot.data[i][1] &gt; 1  ){ levelcomplete=false; }
           if( myplot.data[i][0]!=(i-1) ){ levelcomplete=false; }
      }
    </FINISH>
    <VIDEO> https://www.youtube.com/embed/v7KfyPQ3_Jc </VIDEO>
  </LEVEL>
  <LEVEL>
    <DESCRIPTION>
       Use the blocks to generate a sample of 51 uniform random variables.  Calculate the median, $\phi$, for your sample of random variables and plot a point on the graph at $(1,\phi)$.  You should draw a $y$ error bar around this point that starts at the 10th percentile and that finishes at the 90th percentile.   
    </DESCRIPTION>
    <VID> https://www.youtube.com/watch?v=v7KfyPQ3_Jc </VID>
    <HINT>
       Notice that you have been given a block that allows you to sort a list.
    </HINT>
    <TOOLBOX>
      <category name="Variables" custom="VARIABLE"></category>
      <category name="Program">
         <block type="controls_repeat_ext"></block>
         <block type="math_arithmetic"></block>
         <block type="math_number"></block>
      </category>
      <category name="Random">
         <block type="uniform_random"></block>
      </category>
      <category name="Plotting">
         <block type="draw_error_bar"></block>
      </category>
      <category name="Lists">
         <block type="lists_repeat"></block>
         <block type="lists_getIndex"></block>
         <block type="lists_setIndex"></block>
         <block type="lists_sort"></block>
      </category>
    </TOOLBOX>
    <FINISH>
      prand = 0;
      for(var i=0; i &lt; ww.length; i++ ){
           if( ww[i]=="uniform random variable between 0 and 1" ){ prand += 1; }
      }
      levelcomplete=true;
      if( prand != 1 || myplot.data.length &lt; 3 ){ levelcomplete=false; }
      if( myplot.error.length!=myplot.data.length-1 || prand != 1 || myplot.data.length != 3 myplot.data[i][1] &lt; 0 || myplot.data[i][1] &gt; 1 ){ levelcomplete=false; } 
    </FINISH>
    <VIDEO> https://www.youtube.com/embed/Z-aAZoiihEM </VIDEO>
  </LEVEL>
  <LEVEL>
    <DESCRIPTION>
       Use the blocks to generate a sample of 50 uniform random variables. Calculate the sample mean, $\mu$, for your sample of random variables and the sample variance, $\sigma^2$.  Draw a point on the graph at $(1,\mu$)$.  Draw a $y$ error bar around this point that starts at $\mu - \sigma$ and that finishes at $\mu + \sigma$.
    </DESCRIPTION>
    <VID> https://www.youtube.com/watch?v=Z-aAZoiihEM </VID>
    <HINT>
       Remember that the sample variance, $\sigma^2$, for a sample of $N$ random variables, $\{X_i\}$, is given by $\sigma^2 = \frac{1}{N-1} \sum_{i=1}^N ( X_i - \mu)^2$.  Further recall that we can also write this quantity as $\sigma^2 = \frac{N}{N-1} \left[ \frac{1}{N} \sum_{i=1}^N X_i^2 - \mu^2 \right]$
    </HINT>
    <TOOLBOX>
      <category name="Variables" custom="VARIABLE"></category>
      <category name="Program">
         <block type="controls_repeat_ext"></block>
         <block type="math_arithmetic"></block>
         <block type="math_number"></block>
      </category>
      <category name="Random">
         <block type="uniform_random"></block>
      </category>
      <category name="Plotting">
         <block type="draw_error_bar"></block>
      </category>
      <category name="Lists">
         <block type="lists_repeat"></block>
         <block type="lists_getIndex"></block>
         <block type="lists_setIndex"></block>
      </category>
    </TOOLBOX>
    <FINISH>
      prand = 0;
      for(var i=0; i &lt; ww.length; i++ ){
           if( ww[i]=="uniform random variable between 0 and 1" ){ prand += 1; }
      }
      levelcomplete=true;
      if( prand != 1 || myplot.data.length &lt; 3 ){ levelcomplete=false; }
      if( myplot.error.length!=myplot.data.length-1 || prand != 1 || myplot.data.length != 3 myplot.data[i][1] &lt; 0 || myplot.data[i][1] &gt; 1 ){ levelcomplete=false; } 
    </FINISH>
  </LEVEL>
  <LEVEL>
    <DESCRIPTION>
       Use the blocks below to create a function that generates and returns the value of a bernoulli random variable.  Use this function to generate a sample of bernoulli random variables and then use what you have learnt in the exercises that involved generating uniform random variables to draw a graph showing how the sample mean changes as you increase the number of bernoulli random variables in your sample.
    </DESCRIPTION>
    <VID> https://youtu.be/0KqCK0yG9T0 </VID>
    <HINT>
       You use the blocks under function to create a function in blockly.  Your function will contain the part that generates the bernoulli random variable.  Once you have this function it should be easy to modify the code that you used to do this exercise with uniform random variables.  It is simply a matter of changing the name of the function that is called when you generate the random variables. 
    </HINT>
    <TOOLBOX>
      <category name="Variables" custom="VARIABLE"></category>
      <category name="Program">
         <block type="controls_repeat_ext"></block>
         <block type="math_arithmetic"></block>
         <block type="math_number"></block>
      </category>
      <category name="Random">
         <block type="uniform_random"></block>
      </category>
      <category name="Plotting">
         <block type="draw_list"></block>
      </category>
      <category name="Lists">
         <block type="lists_repeat"></block>
         <block type="lists_getIndex"></block>
         <block type="lists_setIndex"></block>
      </category>
      <category name="Functions" custom="PROCEDURE"></category>
    </TOOLBOX>
    <FINISH>
      prand = 0;
      for(var i=0; i &lt; ww.length; i++ ){
           if( ww[i]=="uniform random variable between 0 and 1" ){ prand += 1; }
      }
      levelcomplete=true;
      if( prand != 1 || myplot.data.length &lt; 3 ){ levelcomplete=false; }
      for(var i=2; i &lt; myplot.data.length; i++ ){
           if( myplot.data[i][1] &lt; 0 || myplot.data[i][1] &gt; 1  ){ levelcomplete=false; }
           if( myplot.data[i][0]!=(i-1) ){ levelcomplete=false; }
      }
    </FINISH>
  </LEVEL>
   <REVIEW>
       Congratulations on completing the exercise!  You should have made notes on what you did within a python notebook as you worked through the tasks.  Take a moment now to review your notes.  Make sure that all the python code you have copied works and that you have notes that explain what it all does.  It is important to do this now as we will be using the programs that you have just learnt to write during this exercise throughout the remainder of the module.  
   </REVIEW>
</PAGE>
