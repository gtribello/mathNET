<PAGE>
  <TITLE> Gamblers ruin and Markov chains </TITLE>
  <HEADER>
     <script src="assets/scripts/plottingTools.js" type="text/javascript"> </script>
  </HEADER>
  <WELCOME>
     In this exercise we are going to learn how to model a discrete random walk.  The aim is to come up with a numerical solution to a problem which you will then learn to solve analytically.  The reason for modelling this process numerically is to better understand the problem that we are trying to solve and to better understand how we can use computers to solve more complex problems.
  </WELCOME>
  <WORKSPACE>
   <table>
      <tr>
        <td>
          <div id="graph" style="width: 400px"></div>
        </td>
        <td width="10px"> nbsp;nbsp; </td>
        <td rowspan="2">
          <div id="blocklyDiv" style="height: 400px"> </div>
        </td>
      </tr>
    </table>
  </WORKSPACE>
  <APIFUNCTIONS>
    // Add graph functions to API
    addGraphFunctionsToApi( interpreter, scope );
  </APIFUNCTIONS>
  <BLOCKS>
  </BLOCKS>
  <SCRIPTS>
    myplot.data = [];

    // Load the Google Chart Tools Visualization API and the chart package.
    if (typeof google == 'object') {
      google.load('visualization', '1', {packages: ['corechart']});
    } else {
      alert('Unable to load Google\'s chart API.\n' +
            'Are you connected to the Internet?');
    }
  </SCRIPTS>
  <STARTUP>
    myplot.data.length = 0;
    myplot.data.unshift(['x', 'y'], [0, 0]);
    myplot.plotGraph('graph','scatter');
  </STARTUP>
  <LEVEL>
    <DESCRIPTION>
      Consider a walker who takes a pace of length 1m forward once a second.  Suppose the walker begins walking at a point 5 m from the origin and that s/he is walking 
      away from the origin.  Use the blocks below to draw a diagram showing the position the walker takes relative to the origin at $t=0$ and during each of the next 20 seconds.  
      Your graph should consist of a set of 20 points and time should be shown on the $x$ axis while position should be shown on the $y$ axis.  
    </DESCRIPTION>
    <HINT>
      This is very simple as there is no component of randomness in the statement of the problem.  What the walker does in the future is completely deterministic.
    </HINT>
    <TOOLBOX>
      <category name="Variables" custom="VARIABLE"></category>
      <category name="Program">
         <block type="controls_repeat_ext"></block>
         <block type="math_arithmetic"></block>
         <block type="math_number"></block>
      </category>
      <category name="Random">
         <block type="uniform_random"></block>
      </category>
      <category name="Plotting">
         <block type="draw_point"></block>
      </category>
    </TOOLBOX>
    <FINISH>
      prand = 0;
      for(var i=0; i &lt; ww.length; i++ ){
           if( ww[i]=="uniform random variable between 0 and 1" ){ prand += 1; }
      }    
      levelcomplete=true;
      if( prand != 0 || myplot.data.length &lt; 3 || myplot.data[2][1]!=5 ){ levelcomplete=false; }
      for(var i=2; i &lt; myplot.data.length; i++ ){ 
           if( myplot.data[i][0]!=(i-2) || myplot.data[i][1]!=(i+3) ){ levelcomplete=false; }
      } 
    </FINISH>
    <VIDEO> https://www.youtube.com/embed/QlwATPnVESU </VIDEO>
  </LEVEL> 
  <LEVEL>
    <DESCRIPTION>
      Now suppose that the walker is drunk and that as such half of his/her one-meter-long strides are away from the origin and half of his one-meter-long strides are 
      towards the origin.  Use the blocks below and a bernoulli random variable to show one path that the walker might take during each of the next 20 seconds.  Once 
      again the first point in your graph should be the position of the walker at time $t=0$.  There should then be a further set of 20 points, time should be shown 
      in the $x$ axis while position should be shown on the $y$ axis.  As in the previous example the walker should starts from a point 5 m from the origin.   
    </DESCRIPTION>
    <HINT>
      Now we need a random component our program.  The problem is still very simple though. 
    </HINT>
    <VID> https://youtu.be/QlwATPnVESU </VID>
    <TOOLBOX>
      <category name="Variables" custom="VARIABLE"></category>
      <category name="Program">
         <block type="controls_repeat_ext"></block>
         <block type="math_arithmetic"></block>
         <block type="math_number"></block>
      </category>
      <category name="Logic">
        <block type="controls_if"></block>
        <block type="logic_compare"></block>
      </category>
      <category name="Random">
         <block type="uniform_random"></block>
      </category>
      <category name="Plotting">
         <block type="draw_point"></block>
      </category>
    </TOOLBOX> 
    <FINISH>
      prand = 0;
      for(var i=0; i &lt; ww.length; i++ ){
           if( ww[i]=="uniform random variable between 0 and 1" ){ prand += 1; }
      }   
      levelcomplete=true;
      if( prand != 1 || myplot.data.length &lt; 3 || myplot.data[2][1]!=5 ){ levelcomplete=false; }
      for(var i=2; i &lt; myplot.data.length; i++ ){
           if( myplot.data[i][0]!=(i-2) || myplot.data[i][1]-Math.floor(myplot.data[i][1])!=0  ){ levelcomplete=false; }
           if( i>2 ){
               if( Math.abs( myplot.data[i][1]-myplot.data[i-1][1] ) != 1 ){ levelcomplete=false; }
           }
      }
    </FINISH>
    <VIDEO> https://www.youtube.com/embed/WCCV7lXhnUI </VIDEO>
  </LEVEL> 
  <LEVEL>
    <DESCRIPTION>
      Consider our drunk walker once more.  The pub at which s/he did her/his night of drinking is at the origin and his home is a mere 10 m from the pub.  Use the blocks 
      below to generate an instance of a random walk once more.  This time, however, the walk should only stop once the walker has arrived back at the pub or at his home.  As
      in the previous questions assume that his/her walk begins at a point that is 5 metres from the origin.  Output two random variables from your program.  The first of these
      two random variables, $X$, should equal 0 if the walker finishes at home and 1 if the walker finishes at the pub and should be plotted at the coordinate $(1,X)$.  The second 
      of the random variables, $Y$, should be equal to the number of steps the walker took before arriving at either the pub or at his/her home.  This random variable should be 
      plotted at $(2,Y)$.    
    </DESCRIPTION>
    <HINT>
      Notice that I have given you a block to create a while loop and a logic block that allows you to check if statement A AND statement B is true.  
    </HINT>
    <VID> https://youtu.be/WCCV7lXhnUI </VID>
    <TOOLBOX>
      <category name="Variables" custom="VARIABLE"></category>
      <category name="Program">
         <block type="controls_whileUntil"></block> 
         <block type="controls_repeat_ext"></block>
         <block type="math_arithmetic"></block>
         <block type="math_number"></block>
      </category>
      <category name="Logic">
        <block type="controls_if"></block>
        <block type="logic_compare"></block>
        <block type="logic_operation"></block>
      </category>
      <category name="Random">
         <block type="uniform_random"></block>
      </category>
      <category name="Plotting">
         <block type="draw_point"></block>
      </category>
    </TOOLBOX>
    <FINISH>
      prand = 0;
      for(var i=0; i &lt; ww.length; i++ ){
           if( ww[i]=="uniform random variable between 0 and 1" ){ prand += 1; }
      }
      levelcomplete=true;
      if( prand != 1 || myplot.data.length &lt; 3 || myplot.data.length &gt; 5 ){ levelcomplete=false; }
      if( myplot.data[2][0]!=1 || myplot.data[3][0]!=2 ){ levelcomplete=false; }
      if( myplot.data[2][1]!=1 &amp;&amp; myplot.data[2][1]!=0 ){ levelcomplete=false; }
    </FINISH>
  </LEVEL> 
  <VIDEO> https://www.youtube.com/embed/Pf_mHHYzsks </VIDEO>
  <LEVEL>
    <DESCRIPTION>
      Lets add one final complication.  We are going to suppose that the probability our drunk walker moves towards his home is proportional to the distance he is 
      from the pub.  In particular, we will suppose that if he is $x$ meters from the pub his probablity of walking towards the home is $\frac{x}{10}$.  Modify the code that
      code that you wrote for the previous exercise to take these revised probablities into account.  Once again you should output two random variables from your program.  
      The first of these two random variables, $X$, should equal 0 if the walker finishes at home and 1 if the walker finishes at the pub and should be plotted at the 
      coordinate $(1,X)$.  The second of the random variables, $Y$, should be equal to the number of steps the walker took before arriving at either the pub or at his/her home.  
      This random variable should be plotted at $(2,Y)$.   
    </DESCRIPTION>
    <HINT>
       The code for this exercise will be similar to the code that you wrote for the previous exercise.  There will be some differences in the way you generate the Bernoulli 
       random variables, however.
    </HINT>
    <VID> https://youtu.be/Pf_mHHYzsks </VID>
    <TOOLBOX>
      <category name="Variables" custom="VARIABLE"></category>
      <category name="Program">
         <block type="controls_whileUntil"></block>
         <block type="controls_repeat_ext"></block>
         <block type="math_arithmetic"></block>
         <block type="math_number"></block>
      </category>
      <category name="Logic">
        <block type="controls_if"></block>
        <block type="logic_compare"></block>
        <block type="logic_operation"></block>
      </category>
      <category name="Random">
         <block type="uniform_random"></block>
      </category>
      <category name="Plotting">
         <block type="draw_point"></block>
      </category>
    </TOOLBOX>
    <FINISH>
      prand = 0;
      for(var i=0; i &lt; ww.length; i++ ){
           if( ww[i]=="uniform random variable between 0 and 1" ){ prand += 1; }
      }
      levelcomplete=true;
      if( prand != 1 || myplot.data.length &lt; 3 || myplot.data.length &gt; 5 ){ levelcomplete=false; }
      if( myplot.data[2][0]!=1 || myplot.data[3][0]!=2 ){ levelcomplete=false; }
      if( myplot.data[2][1]!=1 &amp;&amp; myplot.data[2][1]!=0 ){ levelcomplete=false; }
    </FINISH>
  </LEVEL>
  <REVIEW>
     The exercise you have just performed has taught you how we can generate the two random variables that are at the heart of problem of the gamblers ruin with absorbing boundary conditions.  In the language of the exercise we have just performed these random variables are: a bernoulli random variable that tells us whether the walker arrives in the pub or at home and a discrete random variable that tells us how many steps the walker will take before arriving at either the pub or at home.  For the 1D random walk that you will study further by doing the python exercises and by going through the relevant chapters of the notes the probability of taking a step forward does not depend on where you are.  What you are thus asked to simulate is a situation that you simulated for the penultimate task of this exercise.  The final task is still useful, however, as it has hopefully allowed you to think about how we might go about simulating more complicated Markov chains.  
  </REVIEW>
</PAGE>
